[{"/home/simon/development/homelabify/frontend/src/index.js":"1","/home/simon/development/homelabify/frontend/src/reportWebVitals.js":"2","/home/simon/development/homelabify/frontend/src/App.js":"3","/home/simon/development/homelabify/frontend/src/RackTemp.js":"4"},{"size":500,"mtime":1610831075099,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610831075099,"results":"7","hashOfConfig":"6"},{"size":519,"mtime":1610849073263,"results":"8","hashOfConfig":"6"},{"size":930,"mtime":1610845524535,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"405lbc",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/home/simon/development/homelabify/frontend/src/index.js",[],["22","23"],"/home/simon/development/homelabify/frontend/src/reportWebVitals.js",[],"/home/simon/development/homelabify/frontend/src/App.js",["24","25"],"import React, { useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.scss';\nimport RackTempGraph from \"./RackTemp\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Homelabify</h1>\n      </header>\n      <section className=\"top-content\">\n        <div>status</div>\n        <div>buttons</div>\n      </section>\n      <section className=\"bottom-content\">\n        <RackTempGraph props=\"lol\" />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","/home/simon/development/homelabify/frontend/src/RackTemp.js",["26","27"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport Plot from 'react-plotly.js';\n\nconst RackTempGraph = (props) => {\n\n  const [graphData, setGraphData] = useState(null)\n\n  const graphLayout = {\n    title: \"Temperature in Â°C\"\n  }\n\n  const unpackData = (arr, key) => {\n    return arr.map(obj => obj[key])\n  }\n\n  const getMeasurements = async () => {\n    let fetchData = await fetch(\"http://localhost:4000/api/temperature/celsius\")\n      .then(res => res.json());\n\n    setGraphData([\n      {\n        type: \"line\",\n        mode: \"lines\",\n        x: unpackData(fetchData, \"time\"),\n        y: unpackData(fetchData, \"temp_c\")\n\n      }\n    ])\n  }\n\n  useEffect(() => {\n    getMeasurements();\n    console.log(\"mounted\")\n  }, []);\n\n  return (\n    <div className=\"linegraph graph-medium\">\n      <Plot data={graphData} layout={graphLayout} />\n    </div>\n  );\n\n};\n\n\nexport default RackTempGraph;\n",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"38","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":12},{"ruleId":"34","severity":1,"message":"39","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":35,"column":6,"nodeType":"42","endLine":35,"endColumn":8,"suggestions":"43"},{"ruleId":"30","replacedBy":"44"},{"ruleId":"32","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Line' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMeasurements'. Either include it or remove the dependency array.","ArrayExpression",["48"],["46"],["47"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [getMeasurements]",{"range":"51","text":"52"},[762,764],"[getMeasurements]"]